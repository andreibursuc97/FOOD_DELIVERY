package presentation;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

public class MeniuAdmin extends JFrame {
    private JPanel panel1;
    private JButton dateClientiButton;
    private JButton dateProduseButton;
    private JButton delogareButton;
    private JPanel panel2;

    public MeniuAdmin() {
        $$$setupUI$$$();
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setSize(250, 300);
        this.setLocationRelativeTo(null);
        this.setContentPane(panel1);
        //cosNouButton.addActionListener(new ButonCosNou());

        this.setResizable(false);
        //this.setVisible(true);
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here

    }

    public void setDelogareButton(ActionListener e) {
        delogareButton.addActionListener(e);
    }

    public void setDateClientiButton(ActionListener e) {
        dateClientiButton.addActionListener(e);
    }

    public void setDateProduseButton(ActionListener e) {
        dateProduseButton.addActionListener(e);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.setPreferredSize(new Dimension(250, 300));
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 2, new Insets(10, 10, 20, 10), -1, -1));
        panel1.setBackground(new Color(-5404120));
        panel1.setMaximumSize(new Dimension(600, 400));
        panel1.setMinimumSize(new Dimension(500, 300));
        panel2.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(250, 300), new Dimension(250, 400), 0, false));
        dateClientiButton = new JButton();
        dateClientiButton.setBackground(new Color(-11225979));
        Font dateClientiButtonFont = this.$$$getFont$$$("Constantia", -1, 16, dateClientiButton.getFont());
        if (dateClientiButtonFont != null) dateClientiButton.setFont(dateClientiButtonFont);
        dateClientiButton.setText("Date clienti");
        panel1.add(dateClientiButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 60), new Dimension(200, 200), 0, false));
        dateProduseButton = new JButton();
        dateProduseButton.setBackground(new Color(-11225979));
        Font dateProduseButtonFont = this.$$$getFont$$$("Constantia", -1, 16, dateProduseButton.getFont());
        if (dateProduseButtonFont != null) dateProduseButton.setFont(dateProduseButtonFont);
        dateProduseButton.setText("Date produse");
        panel1.add(dateProduseButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(30, 60), new Dimension(200, 200), 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 20, 10), -1, -1));
        panel3.setBackground(new Color(-4112839));
        panel1.add(panel3, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 100), new Dimension(300, 400), 0, false));
        delogareButton = new JButton();
        delogareButton.setBackground(new Color(-11225979));
        Font delogareButtonFont = this.$$$getFont$$$("Constantia", -1, 16, delogareButton.getFont());
        if (delogareButtonFont != null) delogareButton.setFont(delogareButtonFont);
        delogareButton.setText("Delogare");
        panel3.add(delogareButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 50), new Dimension(200, 200), 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Constantia", -1, 16, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Bine ati venit!");
        panel3.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel2;
    }
}
