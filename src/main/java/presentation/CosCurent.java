package presentation;

import bll.ComandaBLL;
import bll.CosBLL;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Created by Andrei on 22/04/2017.
 */
public class CosCurent extends JFrame {
    private JPanel panel1;
    private JTable table1;
    private JButton finalizareButton;
    private JScrollPane scrollPane1;
    private JTextField pretField;
    private MyModel model;

    public CosCurent() {
        model = new MyModel();
        table1 = new JTable();
        $$$setupUI$$$();
        //$$$setupUI$$$();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        // this.setSize(380, 350);

        this.setLocationRelativeTo(null);
        this.setContentPane(panel1);
        this.setSize(600, 400);
        finalizareButton.addActionListener(new FinalizareComanda());
        //finalizareButton.addActionListener();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(20, 10, 20, 10), -1, -1));
        panel1.setBackground(new Color(-5404120));
        scrollPane1.setBackground(new Color(-11225979));
        Font scrollPane1Font = this.$$$getFont$$$("Comic Sans MS", -1, 14, scrollPane1.getFont());
        if (scrollPane1Font != null) scrollPane1.setFont(scrollPane1Font);
        panel1.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1.setBackground(new Color(-11225979));
        scrollPane1.setViewportView(table1);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(20, 10, 10, 10), -1, -1));
        panel2.setBackground(new Color(-5404120));
        panel1.add(panel2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Comic Sans MS", -1, 14, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Pret total");
        panel2.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel2.add(pretField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 20), new Dimension(200, 50), 0, false));
        finalizareButton = new JButton();
        finalizareButton.setBackground(new Color(-11225979));
        Font finalizareButtonFont = this.$$$getFont$$$("Constantia", -1, 14, finalizareButton.getFont());
        if (finalizareButtonFont != null) finalizareButton.setFont(finalizareButtonFont);
        finalizareButton.setText("Finalizare comanda");
        panel1.add(finalizareButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }


    public class FinalizareComanda implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            try {


                CosBLL cosBLL = new CosBLL();
                cosBLL.finalizareComanda();

                //ListaProduse.this.setVisible(false);
                modelUpdate();
                table1.setModel(model);
                //ScrollPane.add(table1);
                //ListaProduse.this.setVisible(true);
                JOptionPane.showMessageDialog(null, "Comanda a fost finalizata!");

            } catch (IllegalArgumentException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }


        }

    }

    private void createUIComponents() {

        table1 = new JTable();
        pretField = new JTextField();
        modelUpdate();
        table1.setModel(model);
        table1.setFillsViewportHeight(true);

        //listSelectionModel = table1.getSelectionModel();
        //table1.setSelectionModel(listSelectionModel);

        //table1.getModel().setValueAt();
        //dateTabel, columnNames
        scrollPane1 = new JScrollPane(table1);
        // TODO: place custom component creation code here
    }

    public void modelUpdate() {
        String[] columnNames = {"Id", "Descriere", "Cantitate", "Pret bucata"};

        //ListSelectionModel listSelectionModel;
        //JTableHeader=new JTableHeader()
        ComandaBLL comandaBLL = new ComandaBLL();
        ArrayList<String[]> date;
        date = comandaBLL.veziComenzi();
        CosBLL cosBLL = new CosBLL();
        pretField.setText(Integer.toString(cosBLL.veziPret()));
        model.setColumnNames(columnNames);
        model.setList(date);
        /*for (int i = 0; i < dateTabel.length; i++)
            for (int j = 0; j < columnNames.length; j++)
                model.setValueAt(dateTabel[i][j], i, j);*/


        //return model;
    }

}
