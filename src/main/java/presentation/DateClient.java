package presentation;

import bll.ClientBLL;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import model.Client;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Andrei on 21/04/2017.
 */
public class DateClient extends JFrame {


    private JTextField idField;
    private JPanel panelPrincipal;
    private JTextField numeField;
    private JTextField adresaField;
    private JButton actualizareDateButton;
    private JTextField usernameField;
    private JTextField varstaField;
    private JTextField parolaField;
    private JTextField emailField;


    public DateClient() {
        $$$setupUI$$$();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setSize(380, 350);
        this.setLocationRelativeTo(null);
        this.setContentPane(panelPrincipal);
        actualizareDateButton.addActionListener(new ButonActualizareDate());

        this.setResizable(false);
    }

    public JTextField getIdField() {
        return idField;
    }

    public JTextField getNumeField() {
        return numeField;
    }

    public JTextField getAdresaField() {
        return adresaField;
    }

    public JTextField getUsernameField() {
        return usernameField;
    }

    public JTextField getVarstaField() {
        return varstaField;
    }

    public JTextField getParolaField() {
        return parolaField;
    }

    public JTextField getEmailField() {
        return emailField;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelPrincipal = new JPanel();
        panelPrincipal.setLayout(new GridLayoutManager(8, 2, new Insets(20, 10, 20, 10), 10, -1));
        panelPrincipal.setBackground(new Color(-5404120));
        panelPrincipal.setMinimumSize(new Dimension(420, 350));
        idField = new JTextField();
        idField.setEditable(false);
        panelPrincipal.add(idField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        final JLabel label1 = new JLabel();
        label1.setFont(new Font("Comic Sans MS", label1.getFont().getStyle(), 16));
        label1.setText("ID");
        panelPrincipal.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        usernameField = new JTextField();
        usernameField.setEditable(false);
        panelPrincipal.add(usernameField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        final JLabel label2 = new JLabel();
        label2.setFont(new Font("Comic Sans MS", label2.getFont().getStyle(), 16));
        label2.setText("Username");
        panelPrincipal.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        final JLabel label3 = new JLabel();
        label3.setFont(new Font("Comic Sans MS", label3.getFont().getStyle(), 16));
        label3.setText("Nume");
        panelPrincipal.add(label3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        numeField = new JTextField();
        panelPrincipal.add(numeField, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        final JLabel label4 = new JLabel();
        label4.setFont(new Font("Comic Sans MS", label4.getFont().getStyle(), 16));
        label4.setText("Adresa");
        panelPrincipal.add(label4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        adresaField = new JTextField();
        panelPrincipal.add(adresaField, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        final JLabel label5 = new JLabel();
        label5.setFont(new Font("Comic Sans MS", label5.getFont().getStyle(), 16));
        label5.setText("Varsta");
        panelPrincipal.add(label5, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        varstaField = new JTextField();
        panelPrincipal.add(varstaField, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        actualizareDateButton = new JButton();
        actualizareDateButton.setBackground(new Color(-11225979));
        actualizareDateButton.setFont(new Font("Constantia", actualizareDateButton.getFont().getStyle(), 14));
        actualizareDateButton.setHorizontalAlignment(0);
        actualizareDateButton.setHorizontalTextPosition(0);
        actualizareDateButton.setText("Actualizare date");
        panelPrincipal.add(actualizareDateButton, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_SOUTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(130, 20), new Dimension(300, 40), 0, false));
        final JLabel label6 = new JLabel();
        label6.setFont(new Font("Comic Sans MS", label6.getFont().getStyle(), 16));
        label6.setText("Parola");
        panelPrincipal.add(label6, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        parolaField = new JTextField();
        panelPrincipal.add(parolaField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
        final JLabel label7 = new JLabel();
        label7.setFont(new Font("Comic Sans MS", label7.getFont().getStyle(), 16));
        label7.setText("Email");
        panelPrincipal.add(label7, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 20), new Dimension(200, 20), 0, false));
        emailField = new JTextField();
        panelPrincipal.add(emailField, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 30), new Dimension(500, 200), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelPrincipal;
    }

    public class ButonActualizareDate implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            try {
                int id = Integer.parseInt(idField.getText());
                String username = usernameField.getText();
                String nume = numeField.getText();
                String adresa = adresaField.getText();
                String email = emailField.getText();
                int varsta = Integer.parseInt(varstaField.getText());
                String parola = parolaField.getText();

                Client client = new Client(id, username, nume, adresa, email, varsta, parola);
                ClientBLL clientBLL = new ClientBLL();
                clientBLL.update(client);
                JOptionPane.showMessageDialog(null, "Datele tale au fost actualizate cu succes!");

            } catch (IllegalArgumentException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }


        }

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

}
